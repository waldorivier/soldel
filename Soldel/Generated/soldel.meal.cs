//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate template.
// Code is generated on: 12.04.2020 16:34:38
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Collections.Generic;
using mupeModel.Utils;

namespace mupeModel
{

   
    /// <summary>
    /// There are no comments for meal_content, Soldel in the schema.
    /// </summary>
    public partial class meal : i_soldel {

        private IList<meal_content> _l_meal_content = new List<meal_content>();

       
        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();
        
      
        /// <summary>
        /// There are no comments for meal_content constructor in the schema.
        /// </summary>
        public meal()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for meal_id in the schema.
        /// </summary>
        public virtual long meal_id
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_date in the schema.
        /// </summary>
        public virtual System.DateTime meal_date
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_code in the schema.
        /// </summary>
        public virtual long meal_code
        {
            get;
            set;
        }


        /// <summary>
        /// There are no comments for meal_code_str in the schema.
        /// </summary>
        public virtual string meal_code_str {
            get;
            set;
        }

        /// <summary>
        /// There are no comments for meal_cat_10 in the schema.
        /// </summary>
        public virtual string meal_cat_10
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_11 in the schema.
        /// </summary>
        public virtual string meal_cat_11
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_12 in the schema.
        /// </summary>
        public virtual string meal_cat_12
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_13 in the schema.
        /// </summary>
        public virtual string meal_cat_13
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_20 in the schema.
        /// </summary>
        public virtual string meal_cat_20
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_21 in the schema.
        /// </summary>
        public virtual string meal_cat_21
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_22 in the schema.
        /// </summary>
        public virtual string meal_cat_22
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_23 in the schema.
        /// </summary>
        public virtual string meal_cat_23
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_30 in the schema.
        /// </summary>
        public virtual string meal_cat_30
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_31 in the schema.
        /// </summary>
        public virtual string meal_cat_31
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_32 in the schema.
        /// </summary>
        public virtual string meal_cat_32
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_33 in the schema.
        /// </summary>
        public virtual string meal_cat_33
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_40 in the schema.
        /// </summary>
        public virtual string meal_cat_40
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_41 in the schema.
        /// </summary>
        public virtual string meal_cat_41
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_42 in the schema.
        /// </summary>
        public virtual string meal_cat_42
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for meal_cat_43 in the schema.
        /// </summary>
        public virtual string meal_cat_43
        {
            get;
            set;
        }


        public class cat {
            public cat(String v1, String v2, String v3, String v4) {
                val1 = v1 != null ? v1 : "";
                val2 = v2 != null ? v2:  "";
                val3 = v3 != null ? v3 : "";
                val4 = v4 != null ? v4 : "";
            }

            public Boolean all_null() {
                return val1 + val2 + val3 + val4 == "";
            }

            public string val1 {
                get;
            }

            public string val2 {
                get;
            }

            public string val3 {
                get;
            }

            public string val4 {
                get;
            }

        };

        public virtual IList<cat> l_cats {
            get {
                List<cat> l_ = new List<cat>();
                cat cat = new cat(meal_cat_10, meal_cat_20, meal_cat_30, meal_cat_40);
                if(!cat.all_null())
                    l_.Add(cat);

                cat = new cat(meal_cat_11, meal_cat_21, meal_cat_31, meal_cat_41);
                if (!cat.all_null())
                    l_.Add(cat);

                cat = new cat(meal_cat_12, meal_cat_22, meal_cat_32, meal_cat_42);
                if (!cat.all_null())
                    l_.Add(cat);

                cat = new cat(meal_cat_13, meal_cat_23, meal_cat_33, meal_cat_43);
                if (!cat.all_null())
                    l_.Add(cat);

                return l_;
            }
        }

        /// <summary>
        /// There are no comments for l_meal_content in the schema.
        /// </summary>
        public virtual IList<meal_content> l_meal_content {
            get => this._l_meal_content;
            set => this._l_meal_content = value;
        }

        public override bool Equals(object obj) {
            meal toCompare = obj as meal;
            if (toCompare == null) {
                return false;
            }

            if (!Object.Equals(this.meal_id, toCompare.meal_id))
                return false;

            return true;
        }

        public override int GetHashCode() {
            int hashCode = 13;
            hashCode = (hashCode * 7) + meal_id.GetHashCode();
            return hashCode;
        }
        
        public virtual IList<meal_content> l_meal_content_cat_1 {
            get {
                IList<meal_content> l = l_meal_content.Where(x => x.food.caterory.category_id == 1).ToList<meal_content>();
                return l;
            }
        }
        
        // matin / midi / soir
        public virtual IList<String> l_meal_code_str {
            get {
                return new List<String>() { "matin", "midi", "soir"};
            }
        }

        public virtual IList<food> l_food_cat_1 {
            get {
                return hibernate_util.get_instance().get_l_food(1);
            }
        }

        public virtual IList<food> l_food_cat_2 {
            get {
                return hibernate_util.get_instance().get_l_food(2);
            }
        }

        public virtual IList<food> l_food_cat_3 {
            get {
                return hibernate_util.get_instance().get_l_food(3);
            }
        }

        public virtual IList<food> l_food_cat_4 {
            get {
                return hibernate_util.get_instance().get_l_food(4);
            }
        }

        #region I_SOLDEL
       
        public virtual void add_child(object child) {
            if (child is meal_content) {
                meal_content mc = (meal_content)child;
                this.l_meal_content.Add(mc);
                mc.meal = this;
                mc.meal_id = this.meal_id;
            }
        }

        public virtual bool can_add_child(object child) {
            bool can_add = false;
            if (child is meal_content) {
                meal_content mc = (meal_content)child;
                int cnt = l_meal_content.Where(x => x.food.Equals(mc.food)).Count();
                if (cnt==0) {
                    can_add = true;
                }
            }
            return can_add;
        }

        public virtual bool can_remove_me() { 
            return true;
        }

        public virtual void remove_me() {
        }

        public virtual bool is_persistant() {
            return true;
        }

        public virtual bool can_update() {
            return l_meal_content.Any(x => x.can_update() == true);
        }

        public virtual void update() {
            IList<meal_content> l_mc_to_add = new List<meal_content>();
            IList<meal_content> l_mc_to_remove = new List<meal_content>();

            foreach (meal_content mc in l_meal_content) {
                if (mc.can_update()) {
                    meal_content n_mc = new meal_content(this, mc._food);
                    if (mc._food.Equals("vide")) {
                        l_mc_to_remove.Add(mc);
                    } else if (can_add_child(n_mc)) {
                        l_mc_to_add.Add(n_mc);
                        l_mc_to_remove.Add(mc);
                    }
                }
            }

            foreach (meal_content mc in l_mc_to_remove) {
                mc.remove_me();
            }

            foreach (meal_content mc in l_mc_to_add) {
                add_child(mc);
            }
        }

        public virtual i_soldel copy() {
            var copy = new meal();
            copy_object.copy<meal>(this, copy);

            copy.meal_id = hibernate_util.get_instance().generate_meal_id();

            foreach (meal_content mc in l_meal_content) {
                meal_content mc_copy = (meal_content)mc.copy();

                mc_copy.food_id = mc.food_id;
                mc_copy.food = mc.food;
                mc_copy._food = mc_copy.food;

                copy.add_child(mc_copy);
            }
            return copy;
        }

        #endregion
    }
}
