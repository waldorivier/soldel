//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate template.
// Code is generated on: 13.04.2020 07:10:54
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Collections.Generic;

namespace mupeModel
{

    /// <summary>
    /// There are no comments for symptom, Soldel in the schema.
    /// </summary>
    public partial class symptom {
    
        #region Extensibility Method Definitions
        
        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();
        
        #endregion
        /// <summary>
        /// There are no comments for symptom constructor in the schema.
        /// </summary>
        public symptom()
        {
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for symptom_id in the schema.
        /// </summary>
        public virtual long symptom_id
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for symptom_cat in the schema.
        /// </summary>
        public virtual long symptom_cat
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for value in the schema.
        /// </summary>
        public virtual string value
        {
            get;
            set;
        }

    
        /// <summary>
        /// There are no comments for symptom_date in the schema.
        /// </summary>
        public virtual System.DateTime symptom_date
        {
            get;
            set;
        }

        public virtual IList<meal_symptom> l_meal_symptom {
            get;
            set;
        }

        public override bool Equals(object obj) {
            symptom toCompare = obj as symptom;
            if (toCompare == null) {
                return false;
            }

            if (!Object.Equals(this.symptom_id, toCompare.symptom_id))
                return false;

            return true;
        }

        public override int GetHashCode() {
            int hashCode = 13;
            hashCode = (hashCode * 7) + symptom_id.GetHashCode();
            return hashCode;
        }
    }

}
