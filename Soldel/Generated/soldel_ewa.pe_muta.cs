//------------------------------------------------------------------------------
// This is auto-generated code.
//------------------------------------------------------------------------------
// This code was generated by Entity Developer tool using NHibernate template.
// Code is generated on: 18.03.2018 17:44:20
//
// Changes to this file may cause incorrect behavior and will be lost if
// the code is regenerated.
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Collections.Generic;

namespace mupeModel
{

    /// <summary>
    /// There are no comments for pe_muta, Soldel in the schema.
    /// </summary>
    public partial class pe_muta : INotifyPropertyChanging, INotifyPropertyChanged {

        private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(System.String.Empty);

        private string _pe_muta_id;

        private string _u_version;

        private string _libf_muta;

        private string _libd_muta;

        private string _libe_muta;

        private string _libi_muta;

        private int _no_ip;

        private string _tyeven;

        private string _exttyeven;

        private string _user_cre;

        private System.Nullable<System.DateTime> _dh_cre;

        private string _user_maj;

        private System.Nullable<System.DateTime> _dh_maj;

        private System.Nullable<int> _muta_order;

        private string _liste_tycas;

        private string _type_grmu;

        private IList<pe_gmmu> _pe_gmmu_list;

        private IList<pe_attr> _pe_attr_list;
    
        #region Extensibility Method Definitions
        
        /// <summary>
        /// There are no comments for OnCreated in the schema.
        /// </summary>
        partial void OnCreated();
        
        #endregion
        /// <summary>
        /// There are no comments for pe_muta constructor in the schema.
        /// </summary>
        public pe_muta()
        {
            this._pe_muta_id = @"";
            this._pe_gmmu_list = new List<pe_gmmu>();
            this._pe_attr_list = new List<pe_attr>();
            OnCreated();
        }

    
        /// <summary>
        /// There are no comments for pe_muta_id in the schema.
        /// </summary>
        public virtual string pe_muta_id
        {
            get
            {
                return this._pe_muta_id;
            }
            set
            {
                if (this._pe_muta_id != value)
                {
                    this.SendPropertyChanging();
                    this._pe_muta_id = value;
                    this.SendPropertyChanged("pe_muta_id");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for u_version in the schema.
        /// </summary>
        public virtual string u_version
        {
            get
            {
                return this._u_version;
            }
            set
            {
                if (this._u_version != value)
                {
                    this.SendPropertyChanging();
                    this._u_version = value;
                    this.SendPropertyChanged("u_version");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for libf_muta in the schema.
        /// </summary>
        public virtual string libf_muta
        {
            get
            {
                return this._libf_muta;
            }
            set
            {
                if (this._libf_muta != value)
                {
                    this.SendPropertyChanging();
                    this._libf_muta = value;
                    this.SendPropertyChanged("libf_muta");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for libd_muta in the schema.
        /// </summary>
        public virtual string libd_muta
        {
            get
            {
                return this._libd_muta;
            }
            set
            {
                if (this._libd_muta != value)
                {
                    this.SendPropertyChanging();
                    this._libd_muta = value;
                    this.SendPropertyChanged("libd_muta");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for libe_muta in the schema.
        /// </summary>
        public virtual string libe_muta
        {
            get
            {
                return this._libe_muta;
            }
            set
            {
                if (this._libe_muta != value)
                {
                    this.SendPropertyChanging();
                    this._libe_muta = value;
                    this.SendPropertyChanged("libe_muta");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for libi_muta in the schema.
        /// </summary>
        public virtual string libi_muta
        {
            get
            {
                return this._libi_muta;
            }
            set
            {
                if (this._libi_muta != value)
                {
                    this.SendPropertyChanging();
                    this._libi_muta = value;
                    this.SendPropertyChanged("libi_muta");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for no_ip in the schema.
        /// </summary>
        public virtual int no_ip
        {
            get
            {
                return this._no_ip;
            }
            set
            {
                if (this._no_ip != value)
                {
                    this.SendPropertyChanging();
                    this._no_ip = value;
                    this.SendPropertyChanged("no_ip");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for tyeven in the schema.
        /// </summary>
        public virtual string tyeven
        {
            get
            {
                return this._tyeven;
            }
            set
            {
                if (this._tyeven != value)
                {
                    this.SendPropertyChanging();
                    this._tyeven = value;
                    this.SendPropertyChanged("tyeven");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for exttyeven in the schema.
        /// </summary>
        public virtual string exttyeven
        {
            get
            {
                return this._exttyeven;
            }
            set
            {
                if (this._exttyeven != value)
                {
                    this.SendPropertyChanging();
                    this._exttyeven = value;
                    this.SendPropertyChanged("exttyeven");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for user_cre in the schema.
        /// </summary>
        public virtual string user_cre
        {
            get
            {
                return this._user_cre;
            }
            set
            {
                if (this._user_cre != value)
                {
                    this.SendPropertyChanging();
                    this._user_cre = value;
                    this.SendPropertyChanged("user_cre");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for dh_cre in the schema.
        /// </summary>
        public virtual System.Nullable<System.DateTime> dh_cre
        {
            get
            {
                return this._dh_cre;
            }
            set
            {
                if (this._dh_cre != value)
                {
                    this.SendPropertyChanging();
                    this._dh_cre = value;
                    this.SendPropertyChanged("dh_cre");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for user_maj in the schema.
        /// </summary>
        public virtual string user_maj
        {
            get
            {
                return this._user_maj;
            }
            set
            {
                if (this._user_maj != value)
                {
                    this.SendPropertyChanging();
                    this._user_maj = value;
                    this.SendPropertyChanged("user_maj");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for dh_maj in the schema.
        /// </summary>
        public virtual System.Nullable<System.DateTime> dh_maj
        {
            get
            {
                return this._dh_maj;
            }
            set
            {
                if (this._dh_maj != value)
                {
                    this.SendPropertyChanging();
                    this._dh_maj = value;
                    this.SendPropertyChanged("dh_maj");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for muta_order in the schema.
        /// </summary>
        public virtual System.Nullable<int> muta_order
        {
            get
            {
                return this._muta_order;
            }
            set
            {
                if (this._muta_order != value)
                {
                    this.SendPropertyChanging();
                    this._muta_order = value;
                    this.SendPropertyChanged("muta_order");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for liste_tycas in the schema.
        /// </summary>
        public virtual string liste_tycas
        {
            get
            {
                return this._liste_tycas;
            }
            set
            {
                if (this._liste_tycas != value)
                {
                    this.SendPropertyChanging();
                    this._liste_tycas = value;
                    this.SendPropertyChanged("liste_tycas");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for type_grmu in the schema.
        /// </summary>
        public virtual string type_grmu
        {
            get
            {
                return this._type_grmu;
            }
            set
            {
                if (this._type_grmu != value)
                {
                    this.SendPropertyChanging();
                    this._type_grmu = value;
                    this.SendPropertyChanged("type_grmu");
                }
            }
        }

    
        /// <summary>
        /// There are no comments for pe_gmmu_list in the schema.
        /// </summary>
        public virtual IList<pe_gmmu> pe_gmmu_list
        {
            get
            {
                return this._pe_gmmu_list;
            }
            set
            {
                this._pe_gmmu_list = value;
            }
        }

    
        /// <summary>
        /// There are no comments for pe_attr_list in the schema.
        /// </summary>
        public virtual IList<pe_attr> pe_attr_list
        {
            get
            {
                return this._pe_attr_list;
            }
            set
            {
                this._pe_attr_list = value;
            }
        }
   
        public virtual event PropertyChangingEventHandler PropertyChanging;

        public virtual event PropertyChangedEventHandler PropertyChanged;

        protected virtual void SendPropertyChanging()
        {
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, emptyChangingEventArgs);
        }

        protected virtual void SendPropertyChanging(System.String propertyName) 
        {    
		        var handler = this.PropertyChanging;
            if (handler != null)
                handler(this, new PropertyChangingEventArgs(propertyName));
        }

        protected virtual void SendPropertyChanged(System.String propertyName)
        {    
		        var handler = this.PropertyChanged;
            if (handler != null)
                handler(this, new PropertyChangedEventArgs(propertyName));
        }
    }

}
